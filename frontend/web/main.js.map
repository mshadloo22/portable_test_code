{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Service/Srvrecords.service.ts","webpack:///./src/app/Service/User.service.ts","webpack:///./src/app/Service/auth.guard.ts","webpack:///./src/app/Service/auth.service.ts","webpack:///./src/app/View/home/home.component.css","webpack:///./src/app/View/home/home.component.html","webpack:///./src/app/View/home/home.component.ts","webpack:///./src/app/View/login/login.component.css","webpack:///./src/app/View/login/login.component.html","webpack:///./src/app/View/login/login.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\ninterface myData{//put this outside of export class\nobj:object;\n}\n\n@Injectable()\nexport class SrvrecordsService {\n\n  constructor(private http : HttpClient) { }\n/**function to get sample data\n*\n**/\n  getData() {\nreturn this.http.get<any>('/api1/testjson.php');\n  }\n  /**function to get sports list\n  *\n  **/\n  getSportList(){\n    // return this.http.get<myData>('/api1/Ct_people.php?func=getSportList');\n    return this.http.get<any>('/api1/Ct_people.php?func=getSportList');\n  }\n\n  getUserDetail(){\n    //post user detail and return user info if that is correct\n\n\n  }\ngetDataApi2(){\n  return this.http.get<any>('/api/public/document/test1');\n}\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\ninterface itisloggedin{\n  status:boolean;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  \n\n  constructor(private http:HttpClient) { }\n  isLoggedIn(): Observable<itisloggedin> {\n    return this.http.get<itisloggedin>('/api1/Ct_people.php?func=isLoggedIn')\n  }\n\n  getSomeData(){\n    return this.http.get<any>('/api1/Ct_people.php?func=getSomeData')\n  }\n\n  logout(){\n    return this.http.get<any>('/api1/Ct_people.php?func=logout');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService} from '../Service/auth.service';\nimport {Router} from '@angular/router';\nimport { UserService } from './User.service';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n\n  constructor(private auth:AuthService,\n    private router: Router,\n    private user: UserService){\n\n  }\n    canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean \n    {\n      console.log('canactivate status is checkiing......'+this.auth.loggedInStatus);\n      if(this.auth.loggedInStatus){\n        return true;\n      }else{\n        \n        return this.user.isLoggedIn().pipe(map(res=>{\n          console.log(res.status);\n          if(res.status){\n            this.auth.setLoggedInStatus(true);\n            return true;\n          }else{\n            this.router.navigate(['login']);\n            return false;\n          }\n          // console.log('res.status ='+res.status);\n          // this.auth.setLoggedInStatus(res.status);\n        }))\n      }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\nloggedInStatus=JSON.parse(localStorage.getItem('loggedInStatus') || 'false');\n  constructor(private http: HttpClient) { }\n\n  getUserDetail(username,password){\n    console.log('authsercie is called');\n    return this.http.post<any>('/api1/Ct_people.php?func=getUserDetail',{\n      username,password\n    });\n\n  }\n  getUserDetailoztutor(email,password){\n    \n    return this.http.post<any>('/public/login',{\n      email,password\n    });\n\n  }\n  setLoggedInStatus(flag: boolean){\n    this.loggedInStatus=flag;\n    localStorage.setItem('loggedInStatus',flag?'true':'false');\n\n    \n  }\n\n\n\n  isLoggedIn(){\n    return JSON.parse(localStorage.getItem('loggedInStatus') || this.loggedInStatus.toString());\n\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  home works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<form>\\n  <input type=\\\"text\\\" [(ngModel)]=\\\"_username\\\"  />\\n  <input type=\\\"text\\\" [(ngModel)]=\\\"_password\\\" />\\n  </form>\"","import { Component, OnInit } from '@angular/core';\nimport { SrvrecordsService } from 'src/app/Service/Srvrecords.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  _username:string;\n  _password:string;\n\n  constructor(private _srvRecords:SrvrecordsService) { }\n\n  ngOnInit() {\n  }\n\n  loginButton(){\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes} from '@angular/router';\nimport {FormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { HomeComponent } from './View/home/home.component';\nimport {LoginComponent} from './View/login/login.component';\n\n\n//---------------------------------------------------------------------------------------------------------#start routing\nconst appRoutes=[\n  {\n    path:'home',\n    component:HomeComponent\n  },\n  {\n    path:'login',\n    component:LoginComponent\n  }  \n    ];\n    \n    //----------------------------------------------------------------------------------------------------------#end routing\n@NgModule({\n\n  imports: [RouterModule.forRoot(\n      appRoutes,{useHash:true}\n      // {enableTracing:true} //for debugpurpose\n    )],\n    exports:[RouterModule]\n  \n  \n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"  <router-outlet ></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'aangulartute';\n  constructor(private _router: Router,private _route: ActivatedRoute) { }\n  ngOnInit() {\n    console.log('appcommponentnginit');\n    let url=location.href;\n    if(url.indexOf('login')!=-1){\n      (<HTMLElement>document.querySelector('.navbar')).style.display=\"none\";\n    }\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport {AccordionModule} from \"ngx-accordion\";\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\n\n\n\n\nimport { AppComponent } from './app.component';\nimport {SrvrecordsService} from './Service/Srvrecords.service';\nimport {HttpClientModule} from '@angular/common/http';\nimport {UserService} from './Service/User.service';\nimport {AuthGuard} from './Service/auth.guard';\n\nimport {AppRoutingModule } from './app-routing.module';\nimport { HomeComponent } from './View/home/home.component';\nimport { LoginComponent } from './View/login/login.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n\n  ],\n  imports: [ReactiveFormsModule,NgxPaginationModule,NgbModule,FormsModule,AccordionModule,\n    BrowserModule,HttpClientModule,AppRoutingModule,AngularFontAwesomeModule\n  ],\n  providers: [SrvrecordsService,UserService,AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  testname:string;\n  constructor(){\n    this.testname=\"this is another test for this app\";\n  }\n }","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}